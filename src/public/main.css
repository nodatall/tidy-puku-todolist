@import url('https://fonts.googleapis.com/css?family=PT+Sans');

body {
  background-color: #F2F2F2;
  width: 100%;
  font-family: 'PT Sans', sans-serif;
  font-size: 18px;
}

input {
  font-family: 'PT Sans', sans-serif;
  letter-spacing: 0.5px;
}

.container {
  width: 90%;
  max-width: 400px;
  min-height: 500px;
  border-radius: 5px;
  background-color: white;
  margin: 50px auto;
  padding: 20px;
  box-shadow: 0 0 25px 3px #607D8B;
  display:none;
}

.tasksContainer {
  display: flex;
  flex-direction: column;
  padding: 7px 15px;
}

.taskContainer {
  display: flex;
  align-items: center;
  border-bottom: 1px solid #F2F2F2;
  padding: 15px 0;
}

.taskText {
  border: none;
  color: #212121;
  flex: 1;
  padding: 0 15px;
  font-size:20px;
}

.taskText:focus {
  outline: none;
}

.remove {
  visibility: hidden;
  display: flex;
  align-items: center;
}

.taskContainer:hover .remove {
  visibility: visible;
}

.circle {
  opacity: 0.2;
  display: flex;
  align-items: center;
}

.taskContainer:hover .circle {
  opacity: 1;
}

.tasksContainer .complete input {
  opacity: 0.2;
}

.tasksContainer .complete:hover input {
  opacity: 1;
}

.tasksContainer .complete input:focus {
  opacity: 1;
}

.tasksContainer .complete input:focus ~ .circle {
  opacity: 1;
}

.circle:hover, .remove:hover, .topButton:hover {
  cursor: pointer;
}

.complete {
  text-decoration: line-through;
}

.buttonContainer {
  display: flex;
  justify-content: space-between;
  padding: 5px;
}

svg {
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 3;
  stroke: #697D8B;
}

.buttonContainer svg {
  transition: transform 0.3s, stroke 0.3s;
}

.buttonContainer svg:hover {
  transform: scale(1.2);
  stroke: #212121;
}

.buttonContainer circle {
  transition: fill 0.3s;
  fill: #697D8B;
}

.buttonContainer svg:hover circle{
  fill: #212121;
}

#check {
  stroke: white;
  stroke-width: 5;
}

.complete circle {
  stroke: #009688;
  fill: #009688;
  transition: fill 0.3s, stroke-width 0.3s, stroke 0.3s;
}

.complete .circle:hover circle {
  stroke: #697D8B;
  fill: white;
  stroke-width: 2;
}

.complete svg {
  transition: transform 0.3s;
  transform: scale(1.1)
}

.complete .circle:hover svg {
  transform: scale(0.8);
}

.incomplete circle {
  stroke: #697D8B;
  fill: white;
  stroke-width: 2;
  transition: stroke 0.3s, fill 0.3s;
}

.incomplete .circle:hover circle {
  stroke: #009688;
  fill: #009688;
}

.incomplete .circle {
  transition: transform 0.3s;
  transform: scale(0.8);
}

.incomplete .circle:hover {
  transform: scale(1.3);
}

.remove svg {
  transition: transform 0.3s, stroke 0.3s;
}

.remove svg:hover {
  transform: scale(1.2);
  stroke: firebrick;
}

/* React transitions */

.cross-fade-leave {
  opacity: 1;
}
.cross-fade-leave.cross-fade-leave-active {
  opacity: 0;
  transition: opacity .2s ease-in;
}

.cross-fade-enter {
  opacity: 0;
}
.cross-fade-enter.cross-fade-enter-active {
  opacity: 1;
  transition: opacity .2s ease-in .3s;
}

.cross-fade-height {
  transition: height .3s ease-in-out;
}

.example-enter {
  opacity: 0.01;
}

.example-enter.example-enter-active {
  opacity: 1;
  transition: opacity 300ms ease-in;
}

.example-leave {
  opacity: 1;
}

.example-leave.example-leave-active {
  opacity: 0.01;
  transition: opacity 300ms ease-in;
}
